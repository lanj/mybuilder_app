{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lanre\\\\Documents\\\\GitHub\\\\my_builderapp\\\\src\\\\components\\\\Burger\\\\OrderSummary\\\\OrderSummary.js\";\nimport React from 'react';\nimport Aux from '../../../hoc/Auxillary';\nimport Button from '../../UI/Button/Button';\n\nconst orderSummary = props => {\n  // you could pass convert the object props.ingredients to array and pass it on, or pass object and then convert\n  // using object.keys to transform to array of keys. output be returned in list <li> salad: 1 </li>\n  // {{}} used as dynamic entry to create object with inner brace java object. textransform - transforms text to captial\n  const ingredientSummary = Object.keys(props.ingredients).map(igKey => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: igKey,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        textTransform: 'capitalize'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }\n    }, igKey), \": \", props.ingredients[igKey]);\n  });\n  return /*#__PURE__*/React.createElement(Aux, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, \" A delicious burger with the following ingredients:\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, ingredientSummary), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 10\n    }\n  }, \"Total Price: \", props.price)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"Continue to Checkout?\"), /*#__PURE__*/React.createElement(Button, {\n    btnType: \"Danger\",\n    clicked: props.purchaseCanceled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"CANCEL\"), /*#__PURE__*/React.createElement(Button, {\n    btnType: \"Success\",\n    clicked: props.purchaseContinued,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"CONTINUE\"));\n};\n\nexport default orderSummary; //<h3> Your Order</h3>","map":{"version":3,"sources":["C:/Users/lanre/Documents/GitHub/my_builderapp/src/components/Burger/OrderSummary/OrderSummary.js"],"names":["React","Aux","Button","orderSummary","props","ingredientSummary","Object","keys","ingredients","map","igKey","textTransform","price","purchaseCanceled","purchaseContinued"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,wBAAhB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAEhC;AACA;AACA;AACA,QAAMC,iBAAiB,GAAGC,MAAM,CAACC,IAAP,CAAYH,KAAK,CAACI,WAAlB,EAA+BC,GAA/B,CAAmCC,KAAK,IAAI;AAClE,wBACA;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,aAAa,EAAE;AAAhB,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,KADL,CADJ,QAEyBN,KAAK,CAACI,WAAN,CAAkBE,KAAlB,CAFzB,CADA;AAKH,GANyB,CAA1B;AASE,sBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DAHA,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,iBADL,CAJF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAsBD,KAAK,CAACQ,KAA5B,CAAH,CAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BARF,eASE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,QAAhB;AAAyB,IAAA,OAAO,EAAER,KAAK,CAACS,gBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAUE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,OAAO,EAAET,KAAK,CAACU,iBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,CADF;AAcD,CA5BD;;AA8BA,eAAeX,YAAf,C,CAGA","sourcesContent":["import React from 'react';\r\nimport Aux from '../../../hoc/Auxillary';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nconst orderSummary = (props) => {\r\n    \r\n// you could pass convert the object props.ingredients to array and pass it on, or pass object and then convert\r\n// using object.keys to transform to array of keys. output be returned in list <li> salad: 1 </li>\r\n// {{}} used as dynamic entry to create object with inner brace java object. textransform - transforms text to captial\r\nconst ingredientSummary = Object.keys(props.ingredients).map(igKey => {\r\n    return (\r\n    <li key={igKey}>\r\n        <span style={{textTransform: 'capitalize'}}>\r\n            {igKey}</span>: {props.ingredients[igKey]}      \r\n    </li>);\r\n});\r\n\r\n\r\n  return (\r\n    <Aux>\r\n     \r\n     \r\n    <p> A delicious burger with the following ingredients:</p>\r\n      <ul>\r\n          {ingredientSummary}\r\n      </ul>\r\n      <p><strong>Total Price: {props.price}</strong></p>\r\n      <p>Continue to Checkout?</p>\r\n      <Button btnType=\"Danger\" clicked={props.purchaseCanceled } >CANCEL</Button>\r\n      <Button btnType=\"Success\" clicked={props.purchaseContinued } >CONTINUE</Button>\r\n    </Aux>\r\n  )\r\n};\r\n\r\nexport default orderSummary;\r\n\r\n\r\n//<h3> Your Order</h3>"]},"metadata":{},"sourceType":"module"}