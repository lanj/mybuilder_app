{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lanre\\\\Documents\\\\GitHub\\\\my_builderapp\\\\src\\\\containers\\\\Builder\\\\BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Auxillary';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/layout/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        bacon: 0,\n        cheese: 0,\n        meat: 0,\n        salad: 0\n      },\n      totalPrice: 4,\n      purchasable: false,\n      purchasing: false\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldCount - 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceDeduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      alert('you continue');\n    };\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      // use map array into array which recieves key and replace old value with new value it returns\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      //above reduce method to turn it into single number (sum of all ingredients) \n      // 0 representing starting number, (sum,el)=> function to be executed on all array in map\n      // with arguments of sum which is new sum and el which is element, and reurn current sum and element\n      return sum + el;\n    }, 0);\n    this.setState({\n      purchasable: sum > 0\n    });\n  } // controls to add or remove ingredients \n\n\n  render() {\n    const disabledInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    } //{salad: true, meat: false ..}\n\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(OrderSummary, {\n      ingredients: this.state.ingredients,\n      purchaseCanceled: this.purchaseCancelHandler,\n      purchaseContinued: this.purchaseContinueHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 12\n      }\n    })), /*#__PURE__*/React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(BuildControls, {\n      ingredientAdded: this.addIngredientHandler,\n      ingredientRemoved: this.removeIngredientHandler,\n      disabled: disabledInfo,\n      purchasable: this.state.purchasable,\n      ordered: this.purchaseHandler,\n      price: this.state.totalPrice,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["C:/Users/lanre/Documents/GitHub/my_builderapp/src/containers/Builder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchasable","purchasing","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","setState","updatePurchaseState","removeIngredientHandler","priceDeduction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","alert","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Aux from '../../hoc/Auxillary';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/layout/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\n\r\nconst INGREDIENT_PRICES = {\r\n  salad : 0.5,\r\n  cheese: 0.4,\r\n  meat: 1.3,\r\n  bacon: 0.7\r\n}\r\n\r\nclass BurgerBuilder extends Component {\r\n\r\n // constructor(props){\r\n  //  super(props);\r\n  //  this.state = {...}\r\n // }\r\n\r\n   state = {\r\n        ingredients: {\r\n          bacon: 0,\r\n          cheese:0,\r\n          meat: 0,\r\n          salad: 0\r\n        },\r\n        totalPrice: 4,\r\n        purchasable: false,\r\n        purchasing: false\r\n   }\r\n\r\n   updatePurchaseState (ingredients){\r\n    \r\n     const sum = Object.keys(ingredients)\r\n                 .map(igKey => {\r\n                   // use map array into array which recieves key and replace old value with new value it returns\r\n                   return ingredients[igKey];\r\n                 })\r\n                 .reduce(( sum,el )=> {\r\n                   //above reduce method to turn it into single number (sum of all ingredients) \r\n                   // 0 representing starting number, (sum,el)=> function to be executed on all array in map\r\n                   // with arguments of sum which is new sum and el which is element, and reurn current sum and element\r\n                   return sum + el;\r\n                 }, 0);\r\n                 this.setState({purchasable: sum > 0 });\r\n   }\r\n\r\n   // controls to add or remove ingredients \r\n\r\n   addIngredientHandler = (type) => {\r\n      const oldCount = this.state.ingredients[type];\r\n      const updatedCount = oldCount + 1;\r\n      const updatedIngredients = {\r\n        ...this.state.ingredients\r\n      };\r\n      updatedIngredients[type] = updatedCount;\r\n      const priceAddition = INGREDIENT_PRICES[type];\r\n      const oldPrice = this.state.totalPrice;\r\n      const newPrice = oldPrice + priceAddition;\r\n      this.setState({totalPrice: newPrice, ingredients: updatedIngredients }); \r\n      this.updatePurchaseState(updatedIngredients);\r\n   }\r\n\r\n   removeIngredientHandler = (type) => {\r\n    const oldCount = this.state.ingredients[type];\r\n    if(oldCount <= 0){\r\n      return;\r\n    }\r\n    const updatedCount = oldCount -1;\r\n    const updatedIngredients = {\r\n      ...this.state.ingredients\r\n    };\r\n    updatedIngredients[type] = updatedCount;\r\n    const priceDeduction = INGREDIENT_PRICES[type];\r\n    const oldPrice = this.state.totalPrice;\r\n    const newPrice = oldPrice - priceDeduction;\r\n    this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\r\n    this.updatePurchaseState(updatedIngredients);\r\n   }\r\n\r\n   //handle visability of ordersummary \r\n   purchaseHandler = ()=> {\r\n     this.setState({purchasing : true });\r\n   }\r\n\r\n   purchaseCancelHandler = () => {\r\n     this.setState({purchasing: false });\r\n   }\r\n\r\n   purchaseContinueHandler = () =>{\r\n     alert('you continue');\r\n   }\r\n\r\n  render() {\r\n    const disabledInfo = {\r\n      ...this.state.ingredients\r\n    };\r\n    for (let key in disabledInfo){\r\n      disabledInfo[key] = disabledInfo[key] <= 0\r\n    }\r\n    \r\n    //{salad: true, meat: false ..}\r\n    return (\r\n      <Aux>\r\n        <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n           <OrderSummary ingredients={this.state.ingredients} \r\n           purchaseCanceled={this.purchaseCancelHandler}\r\n           purchaseContinued={this.purchaseContinueHandler}/> \r\n        </Modal>\r\n        <Burger ingredients = { this.state.ingredients} />\r\n        <BuildControls  \r\n          ingredientAdded={this.addIngredientHandler}\r\n          ingredientRemoved={this.removeIngredientHandler}\r\n          disabled = {disabledInfo}\r\n          purchasable={this.state.purchasable}\r\n          ordered={this.purchaseHandler}\r\n          price = {this.state.totalPrice}\r\n\r\n        />\r\n      </Aux>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BurgerBuilder;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}