{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lanre\\\\Documents\\\\GitHub\\\\my_builderapp\\\\src\\\\containers\\\\Builder\\\\BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Auxiliary from '../hoc/Auxiliary';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 4,\n      purchasable: false,\n      purchasing: false\n    };\n\n    this.updatePurchaseState = () => {\n      const totalCountOfIngredients = Object.values(this.state.ingredients).reduce((sum, next) => sum + next, 0);\n      this.setState({\n        purchasable: totalCountOfIngredients > 0\n      });\n    };\n\n    this.addIngredientHandler = type => {\n      this.setState(prevState => ({\n        ingredients: { ...prevState.ingredients,\n          [type]: prevState.ingredients[type] + 1\n        },\n        totalPrice: prevState.totalPrice + INGREDIENT_PRICES[type]\n      }), () => this.updatePurchaseState());\n    };\n\n    this.removeIngredientHandler = type => {\n      // calculate new count of ingredients\n      const oldCount = this.state.ingredients[type]; // exit if no ingredient to remove\n\n      if (oldCount <= 0) return; // update state\n\n      this.setState(prevState => ({\n        ingredients: { ...prevState.ingredients,\n          [type]: oldCount - 1\n        },\n        totalPrice: prevState.totalPrice - INGREDIENT_PRICES[type]\n      }), () => this.updatePurchaseState());\n    };\n\n    this.purchaseHandler = () => {\n      // toggle order summary modal\n      this.setState(prevState => ({\n        purchasing: !prevState.purchasing\n      }));\n    };\n\n    this.purchaseContinueHandler = () => {\n      // TODO: hook up to server\n      alert('You continue!');\n    };\n  }\n\n  render() {\n    // determine which Less buttons to disable\n    const disabledInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    return /*#__PURE__*/React.createElement(Auxiliary, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(OrderSummary, {\n      ingredients: this.state.ingredients,\n      price: this.state.totalPrice,\n      purchaseCanceled: this.purchaseHandler,\n      purchaseContinued: this.purchaseContinueHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(BuildControls, {\n      ingredientAdded: this.addIngredientHandler,\n      ingredientRemoved: this.removeIngredientHandler,\n      disabled: disabledInfo,\n      price: this.state.totalPrice,\n      purchasable: this.state.purchasable,\n      ordered: this.purchaseHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["C:/Users/lanre/Documents/GitHub/my_builderapp/src/containers/Builder/BurgerBuilder.js"],"names":["React","Component","Auxiliary","Burger","BuildControls","Modal","OrderSummary","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchasable","purchasing","updatePurchaseState","totalCountOfIngredients","Object","values","reduce","sum","next","setState","addIngredientHandler","type","prevState","removeIngredientHandler","oldCount","purchaseHandler","purchaseContinueHandler","alert","render","disabledInfo","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport Auxiliary from '../hoc/Auxiliary';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\n\r\nconst INGREDIENT_PRICES = {\r\n  salad: 0.5,\r\n  cheese: 0.4,\r\n  meat: 1.3,\r\n  bacon: 0.7\r\n};\r\n\r\nclass BurgerBuilder extends Component {\r\n  state = {\r\n    ingredients: {\r\n      salad: 0,\r\n      bacon: 0,\r\n      cheese: 0,\r\n      meat: 0\r\n    },\r\n    totalPrice: 4,\r\n    purchasable: false,\r\n    purchasing: false\r\n  };\r\n\r\n  updatePurchaseState = () => {\r\n    const totalCountOfIngredients = Object.values(\r\n      this.state.ingredients\r\n    ).reduce((sum, next) => sum + next, 0);\r\n\r\n    this.setState({\r\n      purchasable: totalCountOfIngredients > 0\r\n    });\r\n  };\r\n\r\n  addIngredientHandler = type => {\r\n    this.setState(\r\n      prevState => ({\r\n        ingredients: {\r\n          ...prevState.ingredients,\r\n          [type]: prevState.ingredients[type] + 1\r\n        },\r\n        totalPrice: prevState.totalPrice + INGREDIENT_PRICES[type]\r\n      }),\r\n      () => this.updatePurchaseState()\r\n    );\r\n  };\r\n\r\n  removeIngredientHandler = type => {\r\n    // calculate new count of ingredients\r\n    const oldCount = this.state.ingredients[type];\r\n    // exit if no ingredient to remove\r\n    if (oldCount <= 0) return;\r\n\r\n    // update state\r\n    this.setState(\r\n      prevState => ({\r\n        ingredients: { ...prevState.ingredients, [type]: oldCount - 1 },\r\n        totalPrice: prevState.totalPrice - INGREDIENT_PRICES[type]\r\n      }),\r\n      () => this.updatePurchaseState()\r\n    );\r\n  };\r\n\r\n  purchaseHandler = () => {\r\n    // toggle order summary modal\r\n    this.setState(prevState => ({ purchasing: !prevState.purchasing }));\r\n  };\r\n\r\n  purchaseContinueHandler = () => {\r\n    // TODO: hook up to server\r\n    alert('You continue!');\r\n  };\r\n\r\n  render() {\r\n    // determine which Less buttons to disable\r\n    const disabledInfo = { ...this.state.ingredients };\r\n    for (let key in disabledInfo) {\r\n      disabledInfo[key] = disabledInfo[key] <= 0;\r\n    }\r\n\r\n    return (\r\n      <Auxiliary>\r\n        <Modal show={this.state.purchasing} modalClosed={this.purchaseHandler}>\r\n          <OrderSummary\r\n            ingredients={this.state.ingredients}\r\n            price={this.state.totalPrice}\r\n            purchaseCanceled={this.purchaseHandler}\r\n            purchaseContinued={this.purchaseContinueHandler}\r\n          />\r\n        </Modal>\r\n        <Burger ingredients={this.state.ingredients} />\r\n        <BuildControls\r\n          ingredientAdded={this.addIngredientHandler}\r\n          ingredientRemoved={this.removeIngredientHandler}\r\n          disabled={disabledInfo}\r\n          price={this.state.totalPrice}\r\n          purchasable={this.state.purchasable}\r\n          ordered={this.purchaseHandler}\r\n        />\r\n      </Auxiliary>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BurgerBuilder;\r\n"]},"metadata":{},"sourceType":"module"}