{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lanre\\\\Documents\\\\GitHub\\\\my_builderapp\\\\src\\\\components\\\\Burger\\\\Burger.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Burger.module.css';\nimport BurgerIngredient from './BurgerIngredients/BurgerIngredients';\n\nconst Burger = props => {\n  // transform ingredients object to array\n  let transformedIngredients = Object.keys(props.ingredients).map(igKey => [...Array(props.ingredients[igKey])].map((_, i) => /*#__PURE__*/React.createElement(BurgerIngredient, {\n    key: igKey + i,\n    type: igKey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }))).reduce((arr, el) => arr.concat(el), []); // display message if no ingredients added\n\n  if (transformedIngredients.length === 0) transformedIngredients = /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 30\n    }\n  }, \"Please start adding ingredients!\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Burger,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BurgerIngredient, {\n    type: \"bread-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), transformedIngredients, /*#__PURE__*/React.createElement(BurgerIngredient, {\n    type: \"bread-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }));\n};\n\nBurger.propTypes = {\n  ingredients: PropTypes.shape({\n    salad: PropTypes.number.isRequired,\n    bacon: PropTypes.number.isRequired,\n    cheese: PropTypes.number.isRequired,\n    meat: PropTypes.number.isRequired\n  }).isRequired\n};\nexport default Burger;","map":{"version":3,"sources":["C:/Users/lanre/Documents/GitHub/my_builderapp/src/components/Burger/Burger.js"],"names":["React","PropTypes","styles","BurgerIngredient","Burger","props","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","reduce","arr","el","concat","length","propTypes","shape","salad","number","isRequired","bacon","cheese","meat"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AACtB;AACA,MAAIC,sBAAsB,GAAGC,MAAM,CAACC,IAAP,CAAYH,KAAK,CAACI,WAAlB,EAC1BC,GAD0B,CACtBC,KAAK,IACR,CAAC,GAAGC,KAAK,CAACP,KAAK,CAACI,WAAN,CAAkBE,KAAlB,CAAD,CAAT,EAAqCD,GAArC,CAAyC,CAACG,CAAD,EAAIC,CAAJ,kBACvC,oBAAC,gBAAD;AAAkB,IAAA,GAAG,EAAEH,KAAK,GAAGG,CAA/B;AAAkC,IAAA,IAAI,EAAEH,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFyB,EAM1BI,MAN0B,CAMnB,CAACC,GAAD,EAAMC,EAAN,KAAaD,GAAG,CAACE,MAAJ,CAAWD,EAAX,CANM,EAMU,EANV,CAA7B,CAFsB,CAUtB;;AACA,MAAIX,sBAAsB,CAACa,MAAvB,KAAkC,CAAtC,EACEb,sBAAsB,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAAzB;AAEF,sBACE;AAAK,IAAA,SAAS,EAAEJ,MAAM,CAACE,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGE,sBAFH,eAGE,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CArBD;;AAuBAF,MAAM,CAACgB,SAAP,GAAmB;AACjBX,EAAAA,WAAW,EAAER,SAAS,CAACoB,KAAV,CAAgB;AAC3BC,IAAAA,KAAK,EAAErB,SAAS,CAACsB,MAAV,CAAiBC,UADG;AAE3BC,IAAAA,KAAK,EAAExB,SAAS,CAACsB,MAAV,CAAiBC,UAFG;AAG3BE,IAAAA,MAAM,EAAEzB,SAAS,CAACsB,MAAV,CAAiBC,UAHE;AAI3BG,IAAAA,IAAI,EAAE1B,SAAS,CAACsB,MAAV,CAAiBC;AAJI,GAAhB,EAKVA;AANc,CAAnB;AASA,eAAepB,MAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Burger.module.css';\nimport BurgerIngredient from './BurgerIngredients/BurgerIngredients';\n\nconst Burger = props => {\n  // transform ingredients object to array\n  let transformedIngredients = Object.keys(props.ingredients)\n    .map(igKey =>\n      [...Array(props.ingredients[igKey])].map((_, i) => (\n        <BurgerIngredient key={igKey + i} type={igKey} />\n      ))\n    )\n    .reduce((arr, el) => arr.concat(el), []);\n\n  // display message if no ingredients added\n  if (transformedIngredients.length === 0)\n    transformedIngredients = <p>Please start adding ingredients!</p>;\n\n  return (\n    <div className={styles.Burger}>\n      <BurgerIngredient type=\"bread-top\" />\n      {transformedIngredients}\n      <BurgerIngredient type=\"bread-bottom\" />\n    </div>\n  );\n};\n\nBurger.propTypes = {\n  ingredients: PropTypes.shape({\n    salad: PropTypes.number.isRequired,\n    bacon: PropTypes.number.isRequired,\n    cheese: PropTypes.number.isRequired,\n    meat: PropTypes.number.isRequired\n  }).isRequired\n};\n\nexport default Burger;\n"]},"metadata":{},"sourceType":"module"}